---
interface Props {
  href?: string;
  size?: 'sm' | 'md' | 'lg';
  variant?: 'primary' | 'secondary' | 'white' | 'outline-white';
  class?: string;
  target?: '_blank' | '_self';
  type?: 'button' | 'submit' | 'reset';
}

const { 
  href, 
  size = 'md', 
  variant = 'primary', 
  class: className = '',
  target = '_self',
  type = 'button'
} = Astro.props;

const Component = href ? 'a' : 'button';
---

<Component 
  href={href} 
  target={href ? target : undefined}
  type={!href ? type : undefined}
  class:list={[
    'btn',
    `btn-${variant}`,
    `btn-${size}`,
    className
  ]}
>
  <slot />
</Component>

<style>
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    font-weight: 600;
    border-radius: 0.5rem;
    transition: all 0.3s ease;
    text-decoration: none;
    border: 2px solid transparent;
    cursor: pointer;
    font-family: inherit;
  }

  /* Sizes */
  .btn-sm {
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
  }

  .btn-md {
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
  }

  .btn-lg {
    padding: 1rem 2rem;
    font-size: 1.125rem;
  }

  /* Variants */
  .btn-primary {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
  }

  .btn-secondary {
    background: #f3f4f6;
    color: #1f2937;
  }

  .btn-secondary:hover {
    background: #e5e7eb;
  }

  .btn-white {
    background: white;
    color: #667eea;
  }

  .btn-white:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }

  .btn-outline-white {
    background: transparent;
    color: white;
    border-color: white;
  }

  .btn-outline-white:hover {
    background: rgba(255, 255, 255, 0.1);
  }
</style>
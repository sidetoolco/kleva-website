---
import ZcalWidget from './ZcalWidget.astro';
---

<section class="animated-hero">
  <div class="container">
    <div class="hero-grid">
      <div class="hero-content">
        <div class="hero-badge">
          <span class="badge-pulse"></span>
          <span class="badge-text">LIVE: Processing 10,000+ calls daily</span>
        </div>
        
        <h1 class="hero-title">
          <span class="title-line">AI that recovers</span>
          <span class="title-highlight">25% more debt</span>
          <span class="title-line">at 70% less cost</span>
        </h1>
        
        <p class="hero-description">
          Transform your collections with AI agents that never quit, never burn out, and speak perfect Spanish and Portuguese.<br />
          Proven across 900,000+ minutes monthly in Latin America.
        </p>

        <div class="hero-actions">
          <ZcalWidget mode="popup" buttonText="Book a 15-minute intro call" />
          <a href="#features" class="learn-more-btn">Learn how it works →</a>
        </div>
      </div>

      <div class="hero-visual">
        <!-- Minimal geometric animation -->
        <div class="geometric-animation">
          <svg viewBox="0 0 400 400" class="hero-svg">
            <!-- Grid background -->
            <defs>
              <pattern id="grid" width="40" height="40" patternUnits="userSpaceOnUse">
                <path d="M 40 0 L 0 0 0 40" fill="none" stroke="rgba(0,0,0,0.05)" stroke-width="1"/>
              </pattern>
            </defs>
            <rect width="100%" height="100%" fill="url(#grid)" />
            
            <!-- Central AI visualization -->
            <g class="ai-core">
              <!-- Outer ring -->
              <circle cx="200" cy="200" r="80" fill="none" stroke="rgba(0,0,0,0.1)" stroke-width="2" />
              <circle cx="200" cy="200" r="80" fill="none" stroke="rgba(0,0,0,0.3)" stroke-width="2" 
                      stroke-dasharray="10 5" class="rotating-ring" />
              
              <!-- Middle ring -->
              <circle cx="200" cy="200" r="60" fill="none" stroke="rgba(0,0,0,0.2)" stroke-width="1" />
              
              <!-- Inner core -->
              <circle cx="200" cy="200" r="40" fill="rgba(0,0,0,0.05)" />
              <circle cx="200" cy="200" r="30" fill="#000" class="pulse-core" />
              
              <!-- Connection nodes -->
              <g class="nodes">
                <circle cx="200" cy="120" r="4" fill="#000" class="node node-1" />
                <circle cx="280" cy="200" r="4" fill="#000" class="node node-2" />
                <circle cx="200" cy="280" r="4" fill="#000" class="node node-3" />
                <circle cx="120" cy="200" r="4" fill="#000" class="node node-4" />
                
                <!-- Diagonal nodes -->
                <circle cx="260" cy="140" r="3" fill="rgba(0,0,0,0.5)" class="node node-5" />
                <circle cx="260" cy="260" r="3" fill="rgba(0,0,0,0.5)" class="node node-6" />
                <circle cx="140" cy="260" r="3" fill="rgba(0,0,0,0.5)" class="node node-7" />
                <circle cx="140" cy="140" r="3" fill="rgba(0,0,0,0.5)" class="node node-8" />
              </g>
              
              <!-- Connecting lines -->
              <g class="connections">
                <line x1="200" y1="120" x2="200" y2="170" stroke="rgba(0,0,0,0.2)" stroke-width="1" class="connection-line" />
                <line x1="230" y1="200" x2="280" y2="200" stroke="rgba(0,0,0,0.2)" stroke-width="1" class="connection-line" />
                <line x1="200" y1="230" x2="200" y2="280" stroke="rgba(0,0,0,0.2)" stroke-width="1" class="connection-line" />
                <line x1="170" y1="200" x2="120" y2="200" stroke="rgba(0,0,0,0.2)" stroke-width="1" class="connection-line" />
              </g>
            </g>
            
            <!-- Floating particles -->
            <g class="particles">
              <circle cx="100" cy="100" r="2" fill="rgba(0,0,0,0.3)" class="particle particle-1" />
              <circle cx="300" cy="150" r="2" fill="rgba(0,0,0,0.3)" class="particle particle-2" />
              <circle cx="350" cy="300" r="2" fill="rgba(0,0,0,0.3)" class="particle particle-3" />
              <circle cx="50" cy="250" r="2" fill="rgba(0,0,0,0.3)" class="particle particle-4" />
            </g>
          </svg>
        </div>
      </div>
    </div>

    <!-- Animated metrics ticker -->
    <div class="metrics-ticker">
      <div class="ticker-content">
        <span class="ticker-item">
          <span class="ticker-label">Live Now:</span>
          <span class="ticker-value">2,847 concurrent calls</span>
        </span>
        <span class="ticker-separator">•</span>
        <span class="ticker-item">
          <span class="ticker-label">Today:</span>
          <span class="ticker-value">$487K collected</span>
        </span>
        <span class="ticker-separator">•</span>
        <span class="ticker-item">
          <span class="ticker-label">Success Rate:</span>
          <span class="ticker-value">73%</span>
        </span>
        <span class="ticker-separator">•</span>
        <span class="ticker-item">
          <span class="ticker-label">Avg Handle Time:</span>
          <span class="ticker-value">4.2 min</span>
        </span>
      </div>
    </div>
  </div>
</section>

<style>
  .animated-hero {
    padding: 120px 0 40px;
    background: linear-gradient(135deg, var(--color-gray-50) 0%, var(--color-white) 100%);
    position: relative;
    overflow: hidden;
  }

  .hero-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 64px;
    align-items: center;
  }

  /* Hero Badge */
  .hero-badge {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 8px 16px;
    background: var(--color-black);
    border-radius: 100px;
    margin-bottom: 24px;
  }

  .badge-pulse {
    width: 8px;
    height: 8px;
    background: #00ff88;
    border-radius: 50%;
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 0 rgba(0, 255, 136, 0.7);
    }
    70% {
      box-shadow: 0 0 0 10px rgba(0, 255, 136, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(0, 255, 136, 0);
    }
  }

  .badge-text {
    font-size: 12px;
    font-weight: 500;
    color: var(--color-white);
    letter-spacing: 0.02em;
  }

  /* Hero Title */
  .hero-title {
    font-size: 56px;
    font-weight: 700;
    line-height: 1.1;
    margin-bottom: 24px;
    color: var(--color-black);
  }

  .title-line {
    display: block;
  }

  .title-highlight {
    display: block;
    background: linear-gradient(90deg, #000 0%, #333 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  /* Hero Description */
  .hero-description {
    font-size: 18px;
    line-height: 1.6;
    color: var(--color-gray-600);
    margin-bottom: 32px;
  }

  /* Hero Actions */
  .hero-actions {
    display: flex;
    gap: 16px;
    align-items: center;
  }

  .learn-more-btn {
    display: inline-flex;
    align-items: center;
    color: var(--color-gray-600);
    text-decoration: none;
    font-size: 15px;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  .learn-more-btn:hover {
    color: var(--color-black);
    transform: translateX(4px);
  }

  .demo-btn {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 12px 24px;
    background: var(--color-white);
    color: var(--color-black);
    border: 1px solid var(--color-gray-300);
    border-radius: 8px;
    font-size: 15px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .demo-btn:hover {
    background: var(--color-gray-50);
    border-color: var(--color-gray-400);
    transform: translateY(-2px);
  }

  .play-icon {
    font-size: 12px;
  }

  /* Hero Visual */
  .hero-visual {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .geometric-animation {
    width: 100%;
    max-width: 400px;
    height: 400px;
  }

  .hero-svg {
    width: 100%;
    height: 100%;
  }

  /* Animations */
  @keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  @keyframes pulse-opacity {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 0.8; }
  }

  @keyframes float {
    0%, 100% { transform: translate(0, 0); }
    25% { transform: translate(10px, -10px); }
    50% { transform: translate(-10px, 10px); }
    75% { transform: translate(-10px, -10px); }
  }

  @keyframes pulse-scale {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.1); }
  }

  .rotating-ring {
    transform-origin: center;
    animation: rotate 30s linear infinite;
  }

  .pulse-core {
    animation: pulse-scale 3s ease-in-out infinite;
    transform-origin: center;
  }

  .node {
    animation: pulse-opacity 2s ease-in-out infinite;
  }

  .node-1 { animation-delay: 0s; }
  .node-2 { animation-delay: 0.5s; }
  .node-3 { animation-delay: 1s; }
  .node-4 { animation-delay: 1.5s; }
  .node-5 { animation-delay: 0.25s; }
  .node-6 { animation-delay: 0.75s; }
  .node-7 { animation-delay: 1.25s; }
  .node-8 { animation-delay: 1.75s; }

  .particle {
    animation: float 10s ease-in-out infinite;
  }

  .particle-1 { animation-delay: 0s; animation-duration: 8s; }
  .particle-2 { animation-delay: 2s; animation-duration: 10s; }
  .particle-3 { animation-delay: 4s; animation-duration: 12s; }
  .particle-4 { animation-delay: 6s; animation-duration: 9s; }

  .connection-line {
    animation: pulse-opacity 3s ease-in-out infinite;
  }

  /* Metrics Ticker */
  .metrics-ticker {
    margin-top: 60px;
    padding: 20px;
    background: var(--color-white);
    border: 1px solid var(--color-gray-200);
    border-radius: 12px;
    overflow: hidden;
  }

  .ticker-content {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 24px;
    animation: slide 30s linear infinite;
  }

  .ticker-item {
    display: flex;
    align-items: center;
    gap: 8px;
    white-space: nowrap;
  }

  .ticker-label {
    font-size: 13px;
    color: var(--color-gray-500);
  }

  .ticker-value {
    font-size: 14px;
    font-weight: 600;
    color: var(--color-black);
  }

  .ticker-separator {
    color: var(--color-gray-300);
  }

  /* Responsive */
  @media (max-width: 968px) {
    .hero-grid {
      grid-template-columns: 1fr;
    }

    .hero-visual {
      order: -1;
      margin-bottom: 32px;
    }

    .hero-title {
      font-size: 36px;
    }

    .hero-stats {
      justify-content: space-between;
    }

    .hero-actions {
      flex-direction: column;
    }

    .ticker-content {
      animation: none;
      flex-wrap: wrap;
      justify-content: flex-start;
    }
  }

  /* Container */
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 24px;
  }
</style>

<script>
  // Smooth scroll for learn more button
  document.querySelector('.learn-more-btn')?.addEventListener('click', (e) => {
    e.preventDefault();
    document.querySelector('#features')?.scrollIntoView({ behavior: 'smooth' });
  });
</script>
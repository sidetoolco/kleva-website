---
import type { AutomationSolution } from '../../types/sanity.types';

// Libs
import { Image } from 'astro:assets';
import { urlForImage } from '@sanity/lib/url-for-image';

interface Props {
	automationSolution: AutomationSolution;
}

const { automationSolution } = Astro.props;
---

<div class="container__wide page__section light py-24 md:py-36">
	<!-- Business Impact -->
	<article>
		<header>
			<h3 class="section__title mb-4">Business Impact</h3>
		</header>
		<section>
			<ul class="grid-cols-2 grid-rows-2 gap-4 md:grid">
				{
					automationSolution.businessImpact &&
						automationSolution.businessImpact.map((impact) => (
							<li class="fade-in group flex items-start gap-4 px-4 py-6 md:px-8 lg:max-w-lg lg:gap-5">
								<div class="relative grid aspect-square w-12 shrink-0 place-items-center transition-transform group-hover:rotate-45">
									<div class="absolute h-[2px] w-8 bg-primary" />
									<div class="absolute h-8 w-[2px] bg-primary" />
									<div class="absolute h-[2px] w-8 rotate-45 bg-primary" />
									<div class="absolute h-[2px] w-8 -rotate-45 bg-primary" />
								</div>
								<div class="h-fit">
									<p class="text-xl text-black">{impact.title}</p>
									<p class="text-base text-tertiary">{impact.description}</p>
								</div>
							</li>
						))
				}
			</ul>
		</section>
	</article>
	<!-- Integration Ecosystem  -->
	{
		automationSolution.integrationEcosystem && (
			<section class="space-y-12 pt-24">
				<h3 class="section__title text-black">Integration Ecosystem</h3>
				<ul class="grid grid-cols-1 gap-x-12 md:grid-cols-2">
					{automationSolution.integrationEcosystem.map((integration) => (
						<li class="fade-in group flex items-start gap-4 border-b border-slate-900 px-4 py-6 md:px-8 lg:gap-5">
							<div class="relative grid aspect-square w-12 shrink-0 place-items-center border-black transition-transform group-hover:rotate-45">
								<div class="absolute h-[2px] w-8 bg-primary" />
								<div class="absolute h-8 w-[2px] bg-primary" />
								<div class="absolute h-[2px] w-8 rotate-45 bg-primary" />
								<div class="absolute h-[2px] w-8 -rotate-45 bg-primary" />
							</div>
							<div class="h-fit">
								<p class="text-xl text-black">{integration.title}</p>
								<p class="text-lg text-secondary">{integration.description}</p>
							</div>
						</li>
					))}
				</ul>
			</section>
		)
	}
	<!-- Tools -->
	<section class="py-24">
		<ul class="flex flex-wrap justify-center gap-4">
			{
				automationSolution.toolsLogos &&
					automationSolution.toolsLogos.map((logo) => (
						<li class="h-12 md:h-20">
							<Image src={urlForImage(logo).url()} alt="company logos" inferSize={true} class="h-full" />
						</li>
					))
			}
		</ul>
	</section>

	<!-- Implementation Flexibility -->
	<article class="space-y-12">
		<header class="space-y-6">
			<h3 class="section__title">Implementation Flexibility</h3>
			<p class="max-w-4xl text-lg">
				The solution can be customized to integrate with existing content management systems, marketing platforms, and
				analytics tools, creating a seamless workflow tailored to your specific content needs and organizational
				structure.
			</p>
		</header>
		<div class="relative">
			{
				automationSolution.implementationImages && automationSolution.implementationImages.length > 0 && (
					<div class="implementation-swiper">
						<div class="swiper-wrapper">
							{automationSolution.implementationImages.map((image) => (
								<div class="swiper-slide">
									<div class="mx-auto aspect-[14/9] w-full max-w-[1000px] overflow-hidden rounded-lg">
										<Image
											src={urlForImage(image).url()}
											alt={automationSolution.title ?? ''}
											inferSize={true}
											class="mx-auto h-full w-full max-w-[1000px] object-cover"
										/>
									</div>
								</div>
							))}
						</div>

						<div class="swiper-navigation">
							<div class="swiper-button-prev">
								<svg xmlns="http://www.w3.org/2000/svg" width="21" height="19" viewBox="0 0 21 19" fill="none">
									<path
										d="M11.5149 1.27627L20.0501 9.81156M20.0501 9.81156L11.5149 18.3469M20.0501 9.81156H0.893821"
										stroke="currentColor"
									/>
								</svg>
							</div>
							<div class="swiper-button-next">
								<svg xmlns="http://www.w3.org/2000/svg" width="21" height="19" viewBox="0 0 21 19" fill="none">
									<path
										d="M11.5149 1.27627L20.0501 9.81156M20.0501 9.81156L11.5149 18.3469M20.0501 9.81156H0.893821"
										stroke="currentColor"
									/>
								</svg>
							</div>
						</div>
					</div>
				)
			}
		</div>
	</article>
</div>

<style>
	/* Navigation buttons styling */
	.swiper-navigation {
		display: flex;
		justify-content: center;
		align-items: center;
		gap: 48px;
		margin-top: 24px;
	}

	.swiper-button-next,
	.swiper-button-prev {
		position: static;
		width: 48px;
		height: 48px;
		background: rgba(0, 0, 0, 0);
		border: 1px solid rgba(0, 0, 0, 0.2);
		border-radius: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
		cursor: pointer;
		transition: all 0.3s ease;
		margin: 0;
		color: #000;
	}

	.swiper-button-disabled {
		opacity: 0.3;
		pointer-events: none;
	}

	.swiper-button-next:hover,
	.swiper-button-prev:hover {
		background: rgba(0, 0, 0, 0.1);
		border-color: rgba(0, 0, 0, 0.4);
		transform: scale(1.05);
	}

	.swiper-button-prev {
		transform: rotate(180deg);
	}

	.swiper-button-prev:hover {
		transform: rotate(180deg) scale(1.05);
	}

	.swiper-button-next::after,
	.swiper-button-prev::after {
		display: none;
	}

	@media (min-width: 768px) {
		.swiper-navigation {
			margin-top: 32px;
		}
	}
</style>

<script>
	import Swiper from 'swiper';
	import { Navigation } from 'swiper/modules';
	import 'swiper/css';

	// Initialize Swiper
	document.addEventListener('DOMContentLoaded', function () {
		const implementationSwiper = new Swiper('.implementation-swiper', {
			modules: [Navigation],
			slidesPerView: 1,
			spaceBetween: 30,
			navigation: {
				nextEl: '.swiper-button-next',
				prevEl: '.swiper-button-prev',
			},
		});
	});
</script>

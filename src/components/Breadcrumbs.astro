---
export interface BreadcrumbItem {
  label: string;
  href?: string;
}

interface Props {
  items: BreadcrumbItem[];
}

const { items } = Astro.props;

// Generate structured data for breadcrumbs
const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": items.map((item, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": item.label,
    "item": item.href ? `https://www.kleva.co${item.href}` : undefined
  }))
};
---

<nav class="breadcrumbs" aria-label="Breadcrumb">
  <ol class="breadcrumb-list">
    {items.map((item, index) => (
      <li class="breadcrumb-item">
        {item.href ? (
          <a href={item.href} class="breadcrumb-link">
            {item.label}
          </a>
        ) : (
          <span class="breadcrumb-current" aria-current="page">
            {item.label}
          </span>
        )}
        {index < items.length - 1 && (
          <span class="breadcrumb-separator" aria-hidden="true">/</span>
        )}
      </li>
    ))}
  </ol>
</nav>

<!-- Breadcrumb Schema -->
<script type="application/ld+json" set:html={JSON.stringify(breadcrumbSchema)} />

<style>
  .breadcrumbs {
    padding: 16px 0;
    font-size: 14px;
  }

  .breadcrumb-list {
    display: flex;
    align-items: center;
    list-style: none;
    margin: 0;
    padding: 0;
    flex-wrap: wrap;
  }

  .breadcrumb-item {
    display: flex;
    align-items: center;
  }

  .breadcrumb-link {
    color: var(--color-gray-600);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .breadcrumb-link:hover {
    color: var(--color-black);
    text-decoration: underline;
  }

  .breadcrumb-current {
    color: var(--color-black);
    font-weight: 500;
  }

  .breadcrumb-separator {
    margin: 0 8px;
    color: var(--color-gray-400);
  }

  @media (max-width: 768px) {
    .breadcrumbs {
      padding: 12px 0;
    }
    
    .breadcrumb-list {
      font-size: 13px;
    }
  }
</style>
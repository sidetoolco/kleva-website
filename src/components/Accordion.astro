---
interface Props {
	classes?: string;
}

const { classes, ...rest } = Astro.props;
---

<div class="accordion" class:list={[classes]} {...rest}>
	<div class="accordion__label cursor-pointer">
		<slot name="trigger" />
	</div>
	<div class="accordion__content overflow-hidden">
		<slot name="content" />
	</div>
</div>

<style>
	.accordion {
		display: grid;
		grid-template-rows: auto 0fr;
		transition: grid-template-rows 300ms;
	}
	.accordion.open {
		grid-template-rows: auto 1fr;
	}
</style>

<script>
	const accordions: NodeListOf<Element> = document.querySelectorAll('.accordion');

	accordions.forEach((accordion) => {
		const accordionTrigger = accordion.querySelector('.accordion__label') as HTMLElement | null;

		function toggleAccordion(ev: MouseEvent) {
			const currentEl = ev.currentTarget as HTMLElement;

			accordions.forEach((accordion) => {
				let trigger = accordion.querySelector('.accordion__label');

				if (currentEl === trigger) {
					accordion.classList.contains('open') ? accordion.classList.remove('open') : accordion.classList.add('open');
				} else {
					accordion.classList.remove('open');
				}
			});
		}
		accordionTrigger?.addEventListener('click', toggleAccordion);
	});
</script>
